const {
  H1,
  Article,
  Button,
  RadioButton,
  RadioButtonGroup,
  Paragraph,
  BoxIcon
} = window.DOC

const IconTop = () => <BoxIcon icon="BiUpArrow" />

const LoremIpsum = () => (
  <Paragraph>
    Lorem ipsum dolor sit amet consectetur adipiscing, elit dignissim etiam
    congue ultricies. Commodo sociis massa a potenti dictumst turpis laoreet
    elementum, pulvinar hendrerit risus vivamus rhoncus etiam sapien congue sem,
    luctus tristique sagittis mollis ac convallis cubilia. Conubia dictum
    maecenas eleifend tincidunt nibh nam turpis fringilla vulputate, volutpat
    pretium neque platea phasellus tempus interdum habitant, sociis convallis
    taciti viverra aliquam nec metus auctor.
  </Paragraph>
)

const containerPlaygroundOld = document.querySelector('.sui-Studio-main')
const containerPlaygroundNew = document.querySelector('.Root')

class ContainerDemo extends React.Component {
  constructor() {
    super()
    this.state = {
      text:false,
      icon: true,
      paragraphs: 20,
      dark: false
    }
  }
  render() {
    const {dark, text, icon, paragraphs} = this.state
    const customProps = {}
    customProps.style = dark ? backToTopStyles.LIGHT : backToTopStyles.DARK
    if (text) {
      customProps.textTop = 'TOP'
    }
    if (icon) {
      customProps.iconTop = IconTop
    }
    
    return (
      <div>
        <div
          style={{
            display: 'flex',
            justifyContent: 'space-between',
            padding: '10px 0'
          }}
        >
          <Button
            onClick={() => {
              this.setState({paragraphs: this.state.paragraphs + 20})
            }}
          >
            Add 20 paragraphs
          </Button>
        </div>
        <div style={{display: 'flex', justifyContent: 'space-between', padding: '10px 0'}}>
          <RadioButtonGroup
            onChange={(event, value) => {
              this.setState({dark: value==='dark'})
            }}
            defaultValue="light"
          >
            <RadioButton label="Light Mode" value="light"/>
            <RadioButton label="Dark Mode" value="dark" />
          </RadioButtonGroup>
          <RadioButtonGroup
            onChange={(event, value) => {
              const values = value.split('|');
              this.setState({text: values.includes('text'), icon: values.includes('icon')})
            }}
            defaultValue="icon"
          >
            <RadioButton label="Icon only" value="icon"/>
            <RadioButton label="Icon & Text" value="icon|text" />
            <RadioButton label="Text Only" value="text" />
          </RadioButtonGroup>
        </div>
        <Article
          mode={dark ? 'dark' : 'light'}
        >
          {
            new Array(paragraphs)
              .fill(0)
              .map((elem, index) => <LoremIpsum key={index} />)
          }
        </Article>
        <AtomBackToTop
          refContainer={containerPlaygroundOld || containerPlaygroundNew}
          {...customProps}
        />
      </div>
    )
  }
}

return (
  <div className="sui-StudioPreview">
    <div id="container" className="sui-StudioPreview-content sui-StudioDemo-preview">
      <H1>Back To Top</H1>
      <Paragraph>AtomBackToTop is a component that handles the scroll of a container and that it will be displayed only when needed</Paragraph>
      <ContainerDemo />
    </div>
  </div>
)